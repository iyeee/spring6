<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
<!--    1.spring提供的实例化方法，第一种，在spring配置文件中直接配置类全路径，spring会自动调用该类的无参数构造方法来实现-->
    <bean id="sb" class="com.powernode.sping6.bean.SpringBean"/>
<!--    2.通过简单工厂模式实例化，你需要在spring配置文件中告诉spring，调用哪个类的哪个方法获取bean-->
<!--    factory-method 属性指定的是工厂类当中的静态方法，也就是告诉spring框架，调用这个方法可以获取bean-->
    <bean id="starBean" class="com.powernode.sping6.bean.StarFactory" factory-method="get"/>

<!--    3.spring提供的实例化方法第三种，通过工厂方法模式，通过factory-bean属性+factory-method属性来共同完成-->
<!--    告诉spring框架，调用哪个对象的哪个方法-->
    <bean id="gunFactory" class="com.powernode.sping6.bean.GunFactory"/>
<!--    factory-bean属性告诉spring调用哪个对象，factory-method告诉spring调用该对象的哪个方法-->
    <bean id="gun" factory-bean="gunFactory" factory-method="get"/>

<!--    4.通过factoryBean接口，第三种方式的简化版-->
<!--    由于编写的类实现了FactoryBean接口，所以这个类是一个特殊的类，不需要你再手动指定：factory-bean，factory-method-->
<!--    通过一个特殊的bean，工厂bean，来返回一个普通的bean person对象-->
<!--    通过factoryBean这个工厂bean主要是想对普通bean进行加工-->
    <bean id="person" class="com.powernode.sping6.bean.PersonFactoryBean"/>

<!--    <bean id="student" class="com.powernode.sping6.bean.Student">-->
<!--        <property name="birth" value="Mon Oct 10 14:30:26 CST 2022"/>-->
<!--    </bean>-->
    <bean id="student" class="com.powernode.sping6.bean.Student">
        <property name="birth" ref="date"/>
    </bean>
<!--    通过工厂bean：DateFactoryBean来返回普通bean，java.util.Date-->
    <bean id="date" class="com.powernode.sping6.bean.DateFactoryBean">
        <constructor-arg index="0" value="1999-02-3"/>
    </bean>
</beans>